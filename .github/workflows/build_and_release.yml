name: Automatic Builds

on:
  push:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build_type: ['Debug', 'Release']

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependencies (cached)
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libsdl2-dev libgtk-3-dev
    - name: Compile ${{ matrix.build_type }} build
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
        cmake --build .
    - name: Get short commit hash
      id: vars
      run: echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frustration-linux-${{ steps.vars.outputs.sha_short }}-${{ matrix.build_type }}
        path: |
          build/frustration
          imgui.ini

  #build-windows:
  #  runs-on: windows-2019
  #
  #  steps:
  #  - uses: actions/checkout@v3
  #    with:
  #      submodules: recursive
  #  - name: Compile release build
  #    shell: cmd
  #    run: |
  #      mkdir build-release
  #      cd build-release
  #      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
  #      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -G "Ninja" -DCMAKE_C_COMPILER=cl -DCMAKE_C_COMPILER_FORCED=ON -DCMAKE_CXX_COMPILER=cl -DCMAKE_CXX_COMPILER_FORCED=ON -DCMAKE_BUILD_TYPE=Release ..
  #      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --build .
  #  - name: Upload artifacts
  #    uses: actions/upload-artifact@v3
  #    with:
  #      name: frustration-windows
  #      path: |
  #        build-release/frustration.exe
  #        libs/windows/sdl2/bin/SDL2.dll

  update-release:
    runs-on: ubuntu-latest
    needs: [build-linux]
    #needs: [build-linux, build-windows]

    steps:
      - name: Delete old release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          delete_release: true
          tag_name: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get artifacts
        uses: actions/download-artifact@v3
      - name: Package artifacts
        run: |
          for i in ./*; do mv -v "$i" "`echo $i | tr '[A-Z]' '[a-z]'`"; done
          for i in ./*; do zip -r -j ${i}.zip $i; done
      - name: Create new release
        uses: ncipollo/release-action@v1
        with:
          name: Rolling Release
          body: Automatic builds of the latest master commit
          artifacts: "*.zip"
          tag: release
          token: ${{ secrets.GITHUB_TOKEN }}
